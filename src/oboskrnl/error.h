/*
	oboskrnl/error.h

	Copyright (c) 2023 Omar Berrow
*/

#pragma once

#include <types.h>

#ifdef __cplusplus
namespace obos
{
#endif
	enum errors
	{
		// 0x00
		OBOS_ERROR_NO_ERROR,
		// 0x01
		OBOS_ERROR_INVALID_PARAMETER,
		// 0x02
		OBOS_ERROR_NO_MEMORY,
		// 0x03
		OBOS_ERROR_ALREADY_EXISTS,
		// 0x04
		OBOS_ERROR_DRIVER_NOT_LOADED,
		// 0x05
		OBOS_ERROR_NOT_A_FILESYSTEM_DRIVER,
		// 0x06
		OBOS_ERROR_FILE_NOT_FOUND,
		// 0x07
		OBOS_ERROR_MOUNTPOINT_NOT_FOUND,
		// 0x08
		OBOS_ERROR_FILESYSTEM_ERROR,
		// 0x09
		OBOS_ERROR_UNOPENED_HANDLE,
		// 0x0A
		OBOS_ERROR_NO_SUCH_OBJECT,
		// 0x0B
		OBOS_ERROR_THREAD_DIED,
		// 0x0C
		OBOS_ERROR_HANDLE_ALREADY_OPENED,
		// 0x0D
		OBOS_ERROR_ACCESS_DENIED,
		// 0x0E
		OBOS_ERROR_AVOIDED_DEADLOCK,
		// 0x0F
		OBOS_ERROR_ELF_INCORRECT_FILE,
		// 0x10
		OBOS_ERROR_ELF_INCORRECT_ARCHITECTURE,
		// 0x11
		OBOS_ERROR_BASE_ADDRESS_USED,
		// 0x12
		OBOS_ERROR_BUFFER_TOO_SMALL,
		// 0x13
		OBOS_ERROR_NOT_A_DRIVER,
		// 0x14
		OBOS_ERROR_PREMATURE_PROCESS_EXIT,
		// 0x15
		OBOS_ERROR_MUTEX_NOT_LOCKED,
		// 0x16
		OBOS_ERROR_TIMEOUT,
		// 0x17
		OBOS_ERROR_CONNECTION_CLOSED,
		
		// The highest error the system will return.
		OBOS_HIGHEST_ERROR,
	};
#ifdef OBOS_KERNEL_BUILD
	DWORD GetLastError();
	void SetLastError(DWORD err);
#endif
#ifdef __cplusplus
}
#endif