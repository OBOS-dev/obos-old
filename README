-----------------------------------
   ____   ____    ____    _____ 
  / __ \ |  _ \  / __ \  / ____|
 | |  | || |_) || |  | || (___  
 | |  | ||  _ < | |  | | \___ \ 
 | |__| || |_) || |__| | ____) |
  \____/ |____/  \____/ |_____/ 
-----------------------------------
   ___                          _  _  _               
  / __\ ___   _ __ ___   _ __  (_)| |(_) _ __    __ _ 
 / /   / _ \ | '_ ` _ \ | '_ \ | || || || '_ \  / _` |
/ /___| (_) || | | | | || |_) || || || || | | || (_| |
\____/ \___/ |_| |_| |_|| .__/ |_||_||_||_| |_| \__, |
                        |_|                     |___/ 
-------------------------------------------------------
 ___                                             _       _  _             
/ _ \ _ __  ___         _ __  ___   __ _  _   _ (_) ___ (_)| |_  ___  ___ 
| /_)/| '__|/ _ \ _____ | '__|/ _ \ / _` || | | || |/ __|| || __|/ _ \/ __|
|___/ | |  |  __/|_____|| |  |  __/| (_| || |_| || |\__ \| || |_|  __/\__ \
|     |_|   \___|       |_|   \___| \__, | \__,_||_||___/|_| \__|\___||___/
|                                      |_|                                 
-----------------------------------------------------------------------------
- You must be on Linux. If you are on windows, I recommend you use WSL2.
- You must have an i686-elf-gcc cross-compiler. Instructions on how to get can be found here: https://wiki.osdev.org/GCC_Cross-Compiler
  You will need GCC 11.4.0 and binutils 2.40.
- To generate the operating system's iso, you must have xorriso installed.
______         _  _      _  _               
| ___ \       (_)| |    | |(_)              
| |_/ / _   _  _ | |  __| | _  _ __    __ _ 
| ___ \| | | || || | / _` || || '_ \  / _` |
| |_/ /| |_| || || || (_| || || | | || (_| |
\____/  \__,_||_||_| \__,_||_||_| |_| \__, |
                                       __/ |
                                      |___/ 
--------------------------------------------
* First, clone the repository with this command:
git clone https://github.com/oberrow/obos.git

* Second, enter the directory that the repository was cloned into.
* Third, configure CMake with this command if you want to compile in debug mode:
cmake ./ -G Ninja -DLINKER_SCRIPT=kernel/linker.ld "-DOUTPUT_DIR=./out" -DCMAKE_BUILD_TYPE=Debug
or with this command for release mode:
cmake ./ -G Ninja -DLINKER_SCRIPT=kernel/linker.ld "-DOUTPUT_DIR=./out" -DCMAKE_BUILD_TYPE=Release

* Fourth, build everything with this command:
ninja -j 0 all

* Finally, generate an iso with this script:
./generate_iso.sh
The generated iso will be stored in ./out